import Head from "next/head";
import {
  Alert,
  Box,
  Button,
  Container,
  Grid,
  Snackbar,
  TextField,
  Typography,
} from "@mui/material";
import { BookList } from "@/components/BookList";
import { useState } from "react";
import AddIcon from "@mui/icons-material/Add";
import { ThemeProvider } from "@emotion/react";
import { myTheme } from "@/themes";

export default function Home({ data }) {
  const [nome, setNome] = useState("");
  const [autor, setAutor] = useState("");
  const [descricao, setDescricao] = useState("");
  const [openMsgError, setOpenMsgError] = useState(false);

  const handleAddLivro = async (nome, autor, descricao) => {
    if (nome.length === 0 || autor.length === 0 || descricao.length === 0) {
      setOpenMsgError(true);
    } else {
      try {
        const res = await fetch("/api/addLivro", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            nome: nome,
            autor: autor,
            descricao: descricao,
          }),
        });

        if (!res.ok) throw new Error(`Error: ${res.status}`);
      } catch (error) {
        console.log("ERROR", error);
      } finally {
        window.location.reload(true);
      }
    }
  };

  const handleCloseSnack = (event, reason) => {
    if (reason === "clickaway") {
      return;
    }

    setOpenMsgError(false);
  };

  return (
    <>
      <Head>
        <title>Lista de livros</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ThemeProvider theme={myTheme}>
        <Container maxWidth={"lg"}>
          <Snackbar
            open={openMsgError}
            autoHideDuration={3000}
            onClose={handleCloseSnack}
          >
            <Alert
              onClose={handleCloseSnack}
              severity="error"
              sx={{ width: "100%" }}
            >
              Por favor preencha todos os campos!
            </Alert>
          </Snackbar>
          <Box component={"form"}>
            <Grid container>
              <Typography variant="h4" marginX={2}>
                Adicionar Livro
              </Typography>
              <Grid container spacing={2} padding={2}>
                <Grid item xl={6} md={12}>
                  <TextField
                    onChange={(e) => setNome(e.target.value)}
                    required
                    label={"Nome do Livro"}
                    fullWidth
                  />
                </Grid>
                <Grid item xl={6} md={12}>
                  <TextField
                    onChange={(e) => setAutor(e.target.value)}
                    required
                    label={"Autor do Livro"}
                    fullWidth
                  />
                </Grid>
              </Grid>
              <Grid container spacing={2} padding={2}>
                <Grid item xl={9} sm={12}>
                  <TextField
                    multiline
                    onChange={(e) => setDescricao(e.target.value)}
                    required
                    label={"Descrição do Livro"}
                    fullWidth
                  />
                </Grid>
                <Grid item xl={3} sm={12}>
                  <Button
                    variant="contained"
                    startIcon={<AddIcon />}
                    onClick={() => handleAddLivro(nome, autor, descricao)}
                    fullWidth
                    style={{ height: "100%" }}
                  >
                    Adicionar
                  </Button>
                </Grid>
              </Grid>
            </Grid>
          </Box>
          <BookList data={data} />
        </Container>
      </ThemeProvider>
    </>
  );
}

export async function getServerSideProps() {
  const { livros } = await import("../../data/data.json");

  return {
    props: {
      data: {
        livros,
      },
    },
  };
}
